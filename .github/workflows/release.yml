name: Release

on:
  release:
    types: [ created ]

jobs:
  publish-npm:
    env:
      VERSION: ${{ github.event.release.tag_name }}

    runs-on: ubuntu-latest

    steps:
      - name: Version ${{ env.VERSION }} validity check
        run: |
          if [ $(npm info codecoach@^${{ env.VERSION }} | wc -c) -gt 0 ]; then
            echo "Release version must be greater than existing released versions."
            exit 1
          fi

      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          always-auth: true
          registry-url: https://registry.npmjs.org/

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-

      - name: Install dependencies
        run: yarn

      - name: Publish version ${{ env.VERSION }}
        run: yarn publish --access public --new-version ${{ env.VERSION }} --no-git-tag-version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  publish-docker:
    env:
      VERSION: ${{ github.event.release.tag_name }}

    runs-on: ubuntu-latest

    steps:
      - name: Version ${{ env.VERSION }} validity check
        run: |
          if [ $(npm info codecoach@^${{ env.VERSION }} | wc -c) -gt 0 ]; then
            echo "Release version must be greater than existing released versions."
            exit 1
          fi

      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ vars.DOCKER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.VERSION }}
            type=semver,pattern={{major}},value=${{ env.VERSION }}
            type=ref,event=pr
          labels: ${{ vars.DOCKER_IMAGE_LABELS }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}