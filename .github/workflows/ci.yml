name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  npm-build:
    name: "node: Build and test"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18-latest
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-

      - name: Dependency install and integrety check
        run: yarn install --frozen-lockfile

      - run: yarn lint-ci

      - name: Save linting context for CodeCoach
        run: echo "ESLINT_CONTEXT=$(pwd)" >> $GITHUB_ENV

      - name: Save eslint-report.json
        uses: actions/upload-artifact@v3
        with:
          name: eslint-report
          path: eslint-report.json
          retention-days: 1

      - run: yarn test --ci

      - run: yarn build

  codecoach:
    needs: npm-build
    runs-on: ubuntu-latest
    container: encx/codecoach-cli

    steps:
      - uses: actions/checkout@v3

      - name: Restore eslint-report.json
        uses: actions/download-artifact@v3
        with:
          name: eslint-report
          path: .

      - name: CodeCoach
        run: |
          cat << EOF > codecoach.json
          {
            "vcs": "github",
            "githubRepoUrl": "${{ github.server_url }}/${{ github.repository }}",
            "githubPr": "${{ github.event.pull_request.number }}",
            "githubToken": "${{ github.token }}",
            "buildLogFile": [
              "eslint;eslint-report.json;${ESLINT_CONTEXT}"
            ],
            "removeOldComment": true,
            "output": "output.json"
          }
          EOF

          codecoach --config="codecoach.json"

      - name: Save CodeCoach debug info
        uses: actions/upload-artifact@v3
        with:
          name: codecoach-debug
          path: |
            eslint-report.json
            output.json
            debug.log

  docker-build:
    name: "docker: Build"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false
